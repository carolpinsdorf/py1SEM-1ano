#cálculo CP: (verificar se a nota é válida)
print("---------------CHECKPOINTS---------------")
cp1 = float (input("CheckPoint 1: "))
while cp1 <0 or cp1>10:
    print("Digite uma nota válida")
    cp1 = float (input("CheckPoint 1: "))
cp2 = float (input("CheckPoint 2: "))
while cp2 <0 or cp2>10:
    print("Digite uma nota válida")
    cp2 = float (input("CheckPoint 2: "))
cp3 = float (input("CheckPoint 3: "))
while cp3 <0 or cp3>10:
    print("Digite uma nota válida")
    cp3 = float (input("CheckPoint 3: "))
#verificar qual é a menor:
menor = cp1
if cp2 < menor:
        menor = cp2
elif cp3<menor:
        menor = cp3
# calcular a média:
medCP = (cp1 + cp2 + cp3 - menor) / 2
propCP = medCP * 0.2

#cálculo CHALLENGE: (verificar se a nota válida = OUTRA FORMA)
print("---------------CHALLENGE----------------")
sp1 = float(input("Sprint 1: "))
nota_invalida = sp1 <0 or sp1>10
while nota_invalida:
    print("Digite uma nota válida")
    sp1 = float(input("Sprint 1: "))
    nota_invalida = sp1 <0 or sp1>10      #fazer o casting da variável
sp2 = float(input("Sprint 2: "))
nota_invalida = sp2 <0 or sp2>10
while nota_invalida:
    print("Digite uma nota válida")
    sp2 = float(input("Sprint 2: "))
    nota_invalida = sp2 <0 or sp2>10
medChallenge = (sp1 + sp2) / 2
propChallenge = medChallenge * 0.2

#GLOBAL SOLUTION: (verificar se ée válida)
print("-------------GLOBAL SOLUTION-------------")
gs = float(input("Global Solution: "))
while not (gs >= 0 and gs <= 10):
    print("Digite uma nota válida")
    gs = float(input("Global Solution: "))
propGs = gs * 0.6

# exibir médias:
print(f"""------------------Médias------------------
CheckPoint: {medCP:.1f} 20% = {propCP:.2f}
Challenge: {medChallenge:.1f} 20% {propChallenge:.2f}
Global Solution: {gs:.1f} 40% = {propGs:.2f}""")

# MÉDIA FINAL:
medFinal = (propCP + propChallenge + propGs)
print("----------------Média Final----------------")
if medFinal >= 6:
    print(f"{medFinal:.1f} - Aprovado")
    aprovado += 1
    if medFinal == 10:
        media_maxima += 1
else:
    print(f"{medFinal:.1f} - Reprovado")
    reprovado +=1